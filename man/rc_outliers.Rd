% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rc_outliers.R
\name{rc_outliers}
\alias{rc_outliers}
\title{Identify outliers in REDCap records data}
\usage{
rc_outliers(
  record_data,
  fun = function(x) abs(scale(x)) > 3,
  grouping_variable = NULL,
  fields = NULL,
  filtered = FALSE,
  data_dict = getOption("redcap_bundle")$data_dict,
  mappings = getOption("redcap_bundle")$mappings,
  id_field = getOption("redcap_bundle")$id_field,
  ... = NULL
)
}
\arguments{
\item{record_data}{Dataframe. Records data export from REDCap. For the
purposes of this function, only quantitative data will be kept.}

\item{grouping_variable}{String. Name of a grouping variable. If
included, outliers will be determined separately for each group.}

\item{fields}{Character. A vector of field/variable names to be analyzed
may be passed manually.}

\item{filtered}{Logical. When \code{TRUE}, only outlier values will be returned.
Default is \code{FALSE}.}

\item{data_dict}{Dataframe. A REDCap project data dictionary. By default,
$data_dict is expected in the REDCap bundle option, as created by
\code{rc_bundle}.}

\item{mappings}{Dataframe. A REDCap table containing form/event mappings.}

\item{id_field}{Character. Field name corresponding to the 'record_id' field.}
}
\description{
Identifies outliers for each variable, defined as being further
from the mean than the threshold number of standard deviations. This follows the
convention used within REDCap, however defaults to a standard deviation threshold
of 3 rather than 2. Data is returned in long format with a column specifying
outlier status.
}
\details{
Unless a vector of variables/field names is passed to the
\code{fields} argument, the fields to be analyzed will be guessed based on
column type. All non-numeric data will be removed before analysis.
If mixed numeric/non-numeric data (e.g. "160 cm") are passed, the first numerical
instance will be extracted from the data. If a grouping variable is provided, then
outliers will be evaluated per group.
}
\author{
Marcus Lehr
}
